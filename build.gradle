apply plugin: 'war'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    providedCompile 'org.eclipse.jetty.aggregate:jetty-all:9.2.1.v20140609'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.10'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.6'
    compile 'org.hsqldb:hsqldb:2.3.2'
    compile 'org.flywaydb:flyway-core:3.0'
    compile files('lib/persist-1.1.1.jar')
    
    testCompile 'org.jmockit:jmockit:1.9'
    testCompile 'junit:junit:4.11'
    testCompile 'junit:junit:4.11', {
        transitive = false
    }
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}
war {
    baseName = 'rusk'

    from {
        configurations.providedCompile.collect {
            it.isDirectory() ? it : project.zipTree(it)
        }
    }
    from fileTree(dir: 'build/classes/main', include: '**/Main.class')
    
    manifest.attributes 'Main-Class': 'rusk.Main', 'Rusk-Release' : 'true'
}

apply plugin: 'eclipse'
import org.gradle.plugins.ide.eclipse.model.SourceFolder 

eclipse {
    project {
        name = 'rusk'
    }
    
    classpath {
        defaultOutputDir = file('src/main/webapp/WEB-INF/classes')
        
        file.whenMerged {cp ->
            cp.entries.findAll { it instanceof SourceFolder && it.path.startsWith("src/test/") }*.output = "bin/test"
        }
    }
}
